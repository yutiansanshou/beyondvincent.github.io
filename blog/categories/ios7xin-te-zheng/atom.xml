<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS7新特征 | 破船之家]]></title>
  <link href="http://BeyondVincent.github.io/blog/categories/ios7xin-te-zheng/atom.xml" rel="self"/>
  <link href="http://BeyondVincent.github.io/"/>
  <updated>2014-03-17T14:49:24+08:00</updated>
  <id>http://BeyondVincent.github.io/</id>
  <author>
    <name><![CDATA[破船(BeyondVincent)]]></name>
    <email><![CDATA[beyondvincent@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS7新特征汇总[07]Xcode 5中非常期待的6个功能]]></title>
    <link href="http://BeyondVincent.github.io/blog/2013/07/15/103/"/>
    <updated>2013-07-15T00:00:00+08:00</updated>
    <id>http://BeyondVincent.github.io/blog/2013/07/15/103</id>
    <content type="html"><![CDATA[<p>提醒：这里是新特征汇总博文链接：<span style="text-decoration: underline;"><span style="color: #339966;"><strong><a href="http://beyondvincent.com/2013/06/11/ios7%E6%96%B0%E7%89%B9%E5%BE%81%E6%B1%87%E6%80%BB/" target="_blank"><span style="color: #339966; text-decoration: underline;">iOS7新特征汇总</span></a></strong></span></span></p>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-2.jpg"><img class="alignnone size-full wp-image-1595" alt="QQ20130715-2" src="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-2.jpg" width="1069" height="598" /></a></p>

<p>&nbsp;</p>

<h2><strong><span style="color: #339966;">小引：</span></strong></h2>

<p>自从北京时间2013年06月11日苹果发布Xcode 5 Developer Preview 1，到现在(2013年7约15日)已经过去一个月，苹果也放出了Xcode 5 Developer Preview 3，速度还是蛮快的，希望体验的同学也可以去苹果官网下载。</p>

<p>今晚看了一下WWDC2013的session：<strong><span style="color: #ff0000;">What’s New in Xcode 5</span></strong>。那就来说说Xcode 5里面一些值得期待的东西吧。由于Xcode中的新东西比较多，我这里挑选了6个非常好的新东西，供大家了解，如果需要了解更多内容，请移步到上面说的session中。</p>

<p>另：在看视频过程中，要特别感谢<strong><span style="text-decoration: underline;"><span style="color: #339966;"><a href="http://joeyio.com/" target="_blank"><span style="color: #339966; text-decoration: underline;">乔学士先生</span></a></span></span></strong>汇总的<span style="text-decoration: underline;"><strong><span style="color: #339966;"><a href="https://github.com/qiaoxueshi/WWDC_2013_Video_Subtitle" target="_blank"><span style="color: #339966; text-decoration: underline;">WWDC2013英文字幕</span></a></span></strong></span>。大家可以想象一下，本来英语就不好的拉，要是没有字幕，要想看懂老外讲的内容，那该痛上加痛哈。</p>

<!--more-->


<h2><strong><span style="color: #339966;">目录</span></strong></h2>

<p><strong><span style="color: #339966;">0、介绍</span></strong><br/>
<strong><span style="color: #339966;"> 1、Toolbar减小30%</span></strong><br/>
<strong><span style="color: #339966;"> 2、源码控制</span></strong><br/>
<strong><span style="color: #339966;"> 3、自动配置</span></strong><br/>
<strong><span style="color: #339966;"> 4、代码文档能力</span></strong><br/>
<strong><span style="color: #339966;"> 5、Datatip</span></strong><br/>
<strong><span style="color: #339966;"> 6、Debug 仪表</span></strong><br/>
<strong><span style="color: #339966;">7、破船有话要说</span></strong></p>

<p>&nbsp;</p>

<h3><strong><span style="color: #339966;">正文</span></strong></h3>

<h2><strong><span style="color: #339966;">0、介绍</span></strong></h2>

<p>该session(What&#8217;s New in Xcode 5)介绍了Xcode 5里面为开发者带来的许多新内容，使用过Xcode的同学可能都已经知道，Xcode就是一个完整的开发工具包，可以用来开发在Mac、iPhone和iPad上面的运行的软件。Xcode提供了Instrument 分析工具、iOS模拟器以及操作系统(iOSOS X)相关的一些框架等。</p>

<p>下面就来看看这些值得期待的东西吧。</p>

<h3><strong><span style="color: #339966;">1、Toolbar减小30%</span></strong></h3>

<p>如下图所示，这样做的目的主要就是让Xcode能够尽可能多的显示与编码相关的内容，让开发者专心写代码。从图中也可以看出，Xcode 5与iOS 7的设计理念有相通之处——扁平化。</p>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-1.jpg"><img class="alignnone size-full wp-image-1594" alt="QQ20130715-1" src="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-1.jpg" width="1213" height="698" /></a></p>

<p>&nbsp;</p>

<p>如下图所示，我们可以看看Toolbar在Xcode 4和Xcode 5中的对比(左边为Xcode 4，右边为Xcode 5)</p>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-3.jpg"><img class="alignnone size-full wp-image-1596" alt="QQ20130715-3" src="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-3.jpg" width="729" height="383" /></a></p>

<p>&nbsp;</p>

<h3><strong><span style="color: #339966;">2、源码控制</span></strong></h3>

<p>在Xcode 5中，可以从一个已有的工程中check out代码，然后进行开发。</p>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-5.jpg"><img class="alignnone size-full wp-image-1598" alt="QQ20130715-5" src="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-5.jpg" width="1123" height="603" /></a></p>

<p>可以方便的浏览和选择Rep。</p>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-6.jpg"><img class="alignnone size-full wp-image-1599" alt="QQ20130715-6" src="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-6.jpg" width="934" height="558" /></a></p>

<p>&nbsp;</p>

<p>在菜单中，有一个Source Control，可以方便的对代码进行Commit、Push、Pull、选择分支、创建分支等操作。如下图所示：</p>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-7.jpg"><img class="alignnone size-full wp-image-1601" alt="QQ20130715-7" src="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-7.jpg" width="1220" height="507" /></a></p>

<p>&nbsp;</p>

<p>另外，还可以方便的查找到某行代码是谁修改的，如下图：</p>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-8.jpg"><img class="alignnone size-full wp-image-1602" alt="QQ20130715-8" src="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-8.jpg" width="687" height="275" /></a></p>

<p>&nbsp;</p>

<h3><strong><span style="color: #339966;">3、自动配置</span></strong></h3>

<p>只需要在Xcode账号中输入Apple ID，Xcode就能够帮助开发者完成一些配置项(iCloud、Game Center、Passbook和Maps等)，作为开发者只需要简单的打开或者关闭相关功能即可，Xcode会自动的发送provisioning profile、创建entitlement、更新Info.plist文件、甚至是链接到所需要的框架——所有这些繁琐的事情都不再需要开发者亲自操作了。</p>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-9.jpg"><img class="alignnone size-full wp-image-1603" alt="QQ20130715-9" src="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-9.jpg" width="979" height="710" /></a></p>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-10.jpg"><img class="alignnone size-full wp-image-1604" alt="QQ20130715-10" src="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-10.jpg" width="1105" height="553" /></a></p>

<p>&nbsp;</p>

<h3><strong><span style="color: #339966;">4、代码文档能力</span></strong></h3>

<p>从现在开始，Xcode可以从api中提取出文档注释了。相信这是好多开发者都期望有的功能。如下图所示：</p>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-11.jpg"><img class="alignnone size-full wp-image-1605" alt="QQ20130715-11" src="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-11.jpg" width="1054" height="469" /></a></p>

<p>&nbsp;</p>

<h3><strong><span style="color: #339966;">5、Datatip</span></strong></h3>

<p>在利用Xcode调试代码的时候，通过Datatip可以可以非常方便的查看变量的值。</p>

<p>Datatip可以显示出来自LLDB的概要信息，以及打印出某个变量的描述信息(不用再跑到consle中输入PO啦)，如下图：</p>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-13.jpg"><img class="alignnone size-full wp-image-1607" alt="QQ20130715-13" src="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-13.jpg" width="1093" height="593" /></a></p>

<p>当然，图文信息也可以方便的显示出来，如下所示：</p>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-14.jpg"><img class="alignnone size-full wp-image-1608" alt="QQ20130715-14" src="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-14.jpg" width="1018" height="565" /></a></p>

<p>&nbsp;</p>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-15.jpg"><img class="alignnone size-full wp-image-1609" alt="QQ20130715-15" src="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-15.jpg" width="1112" height="648" /></a></p>

<p>&nbsp;</p>

<h3><strong><span style="color: #339966;">6、Debug 仪表</span></strong></h3>

<p>通过Debug仪表可以显示出程序运行时，CPU、内存等实际发生的事情，这样可以非常容易的查出并修正潜在的bug。</p>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-16.jpg"><img class="alignnone size-full wp-image-1610" alt="QQ20130715-16" src="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-16.jpg" width="876" height="657" /></a> <a href="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-17.jpg"><img class="alignnone size-full wp-image-1611" alt="QQ20130715-17" src="http://beyondvincent.com/wp-content/uploads/2013/07/QQ20130715-17.jpg" width="997" height="668" /></a></p>

<p>&nbsp;</p>

<p><strong><span style="color: #339966;">7、破船有话要说</span></strong></p>

<p>还记得使用Xcode 3版本开发iOS程序的时候，感觉这个工具不好使用，当时的IB和Xcode还是分开的，打开个xib文件，IB也要启动半天，更别说界面与代码的整体开发效率了。现如今看到苹果对Xcode做了很多改进，使用越来越方便，开发效率也大大提升，这对大多数开发者来说，绝对是福利！！！</p>

<p>本文由<span style="text-decoration: underline;"><span style="color: #339966;"><strong><a href="http://beyondvincent.com/"><span style="color: #339966; text-decoration: underline;">破船</span></a></strong></span></span>原创●转载请注明出处●<time datetime="2013-05-18T17:37:00+08:00" data-updated="true">2013-07-15</time></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS7新特征汇总[06]What&#8217;s New in Cocoa Touch学习笔记]]></title>
    <link href="http://BeyondVincent.github.io/blog/2013/07/03/95/"/>
    <updated>2013-07-03T00:00:00+08:00</updated>
    <id>http://BeyondVincent.github.io/blog/2013/07/03/95</id>
    <content type="html"><![CDATA[<p>提醒：这里是新特征汇总博文链接：<span style="text-decoration: underline;"><span style="color: #339966;"><strong><a href="http://beyondvincent.com/2013/06/11/ios7%E6%96%B0%E7%89%B9%E5%BE%81%E6%B1%87%E6%80%BB/" target="_blank"><span style="color: #339966; text-decoration: underline;">iOS7新特征汇总</span></a></strong></span></span></p>

<p>今晚看了一下WWDC2013的session：<strong><span style="color: #ff0000;">What&#8217;s New in Cocoa Touch</span></strong></p>

<p>该session介绍了iOS 7中Cocoa Touch里面新增的许多内容。</p>

<p>下面是一些学习笔记，供大家参考一下（<strong><span style="color: #339966;">由于是边看边记录，如有文字录入错误，还请见谅</span></strong>）：</p>

<h2><strong><span style="color: #339966;">1、Multitasking</span></strong></h2>

<p><span style="color: #339966;">Background fetching</span><br/>
you must call this at launch<br/>
<span style="color: #339966;">Remote notification</span><br/>
Method: didReceiveRemoteNotification<br/>
call the completion handler when fetch is complete<br/>
<span style="color: #339966;">Background transfers</span><br/>
Method: handleEventsForBackgroundURLSession<br/>
NSURLSession replace API for NSURLConnection<br/>
Data upload download task<br/>
session have identifiers</p>

<h2><strong><span style="color: #339966;">2、view and image</span></strong></h2>

<p><span style="color: #339966;"> Image Rendering Modes</span><br/>
Creating image with redering mode<br/>
method: imageWithRenderingMode:<br/>
param: UIImageRenderingMode<br/>
<span style="color: #339966;">Tint</span><br/>
New UIView property<br/>
@property (nonatomic, retain) UIColor *tintColor;<br/>
Dimming adjustment behavior<br/>
@property (nonatomic) UIViewTintAdjustmentMode tintAdjustmentMode;<br/>
Finding out about changes<br/>
&ndash;(void) intColorDidChange;<br/>
<span style="color: #339966;">View Animation</span><br/>
No animations!<br/>
+(void)performWithoutAnimation:<br/>
Keyframes<br/>
+(void)animationKeyframesWithDuration<br/>
+(void)addKeyframeWithRelativeStartTime:<br/>
UIViewKeyframeAnimationOptions</p>

<h2><strong><span style="color: #339966;">3、Motion Effects</span></strong></h2>

<p>Applies relative values to key paths of a target view<br/>
Affected by device &#8220;pose&#8221; or position<br/>
Affects animatable properties only</p>

<p>class: UIInterpolatingMotionEffect<br/>
initialization——initWithKeyPath:<br/>
UIMotionEffect<br/>
abstract superclass<br/>
one method<br/>
keyPathsAndRelativeValuesForViewerOffset:<br/>
UIOffset: CGFloat horizontal, vertical;<br/>
<span style="color: #339966;">UIView</span><br/>
adding and removing motion effects<br/>
addMotionEffect:<br/>
removeMotionEffect:<br/>
@property (copy, nonatomic) NSArray *motionEffects;</p>

<h2><strong><span style="color: #339966;">4、Collection Views</span></strong></h2>

<p><span style="color: #339966;"> Transitions between layouts</span><br/>
method: setCollectionViewLayout: animated: completion<br/>
<span style="color: #339966;">UICollectionViewTransitionLayout</span></p>

<h2><strong><span style="color: #339966;">5、View Controllers</span></strong></h2>

<p><span style="color: #339966;"> Layout</span><br/>
wantsFullScreenLayout<br/>
deprecated in iOS 7.0<br/>
extended edges<br/>
content size<br/>
@property (nonatomic) CGSize preferredContentSize;<br/>
status bar appearance<br/>
new behavior for the status bar<br/>
new status bar style<br/>
UIStatusBarStyleDefault<br/>
UIStatusBarStyleLightContent (new)<br/>
// UIStatusBarStyleBlackTranslucent<br/>
// UIStatusBarStyleBlackOpaque</p>

<h2><strong><span style="color: #339966;">6、Custom Transitions</span></strong></h2>

<p>bounded &#8220;canned&#8221; transition<br/>
interactive, user-driven transition<br/>
new delegate method on UIViewController<br/>
UIViewControllerTransitioningDelegate<br/>
UIViewControllerAnimatedTransitioning<br/>
UIViewControllerInteractiveTransitioning<br/>
UIViewControllerContextTransitioning<br/>
ref: WWDC2013 Custom Transitions Using View Controllers</p>

<h2><strong><span style="color: #339966;">7、State Restoration</span></strong></h2>

<p><span style="color: #339966;"> Ignoring Snapshots</span><br/>
&ndash;(void)ignoreSnapshotOnNextApplicationLaunch;<br/>
<span style="color: #339966;">Other Objects</span><br/>
Non-view and non-view controller can now participate<br/>
method: registerObjectForStateRestoration:<br/>
<span style="color: #339966;">Bluetooth State Restoration</span></p>

<h2><strong><span style="color: #339966;">8、AirDrop</span></strong></h2>

<p>Adopt <span style="color: #339966;">UIActivityItemSourceProtocol</span><br/>
Update application&#8217;s info.plist to create, register, and export UTI for custom document formats<br/>
New Documents/Inbox directory</p>

<p><strong style="font-size: 1.5em;"><span style="color: #339966;">9、Dynamics</span></strong></p>

<p><span style="color: #339966;"><span style="color: #333333;">Fluid, responsive animations</span></span></p>

<p>Enhances the interactions in you application<br/>
Concentration on behaviors</p>

<p>class: UIDynamicAnimator<br/>
UIDynamicBehavior<br/>
UIDynamicItem</p>

<p><span style="color: #339966;">supported behaviors</span><br/>
UIAttachmentBehavior<br/>
UICollisionBehavior<br/>
UIGravityBehavior<br/>
UIPushBehavior<br/>
UISnapBehavior<br/>
UDynamicItemBehavior</p>

<h2><strong><span style="color: #339966;">10、Text</span></strong></h2>

<p><span style="color: #339966;"> Dynamic type sizing</span><br/>
@property(nonatomic, readonly) NSString * preferredContentSizeCategory;<br/>
<span style="color: #339966;">UIFont</span><br/>
Font scaling based on content size category<br/>
preferredFontForTextStyle:<br/>
<span style="color: #339966;">Text Kit</span><br/>
Objective-C API<br/>
class: NSTextStorage<br/>
NSLayoutManager<br/>
NSTextContainer<br/>
UITextView UITextField UILable<br/>
additional class<br/>
NSTextAttachment</p>

<h2><strong><span style="color: #339966;">11、More New Feathures</span></strong></h2>

<p><span style="color: #339966;"> Multipeer Connectivity</span><br/>
Local network discovery<br/>
seesion management<br/>
encryptyed sessions<br/>
file transfers<br/>
<span style="color: #339966;">SpriteKit</span><br/>
iOS 、OS X<br/>
High-performance sprite-based game framework<br/>
image atlas support<br/>
UIKit and AppKit integration<br/>
<span style="color: #339966;">Game Controller</span><br/>
Buttons<br/>
Analog joysticks<br/>
Multiple controllers<br/>
<span style="color: #339966;">MapKit</span><br/>
Directions<br/>
3D cameras<br/>
Map tile overlays<br/>
Map snapshots<br/>
Geodesic polylines</p>

<p><span style="color: #339966;">CoreLocation</span><br/>
Bluetooth LE beacons<br/>
advertising<br/>
ranging<br/>
New region types<br/>
Region monitoring<br/>
<span style="color: #339966;">Accessibility</span><br/>
Guided Access API<br/>
<span style="color: #339966;">GameCenter</span><br/>
new turn-based game API<br/>
turns tabs<br/>
mode for bidding<br/>
leader board improvements<br/>
system integrity features</p>

<p>本文由<span style="text-decoration: underline;"><span style="color: #339966;"><strong><a href="http://beyondvincent.com/"><span style="color: #339966; text-decoration: underline;">破船</span></a></strong></span></span>原创●转载请注明出处●<time datetime="2013-05-18T17:37:00+08:00" data-updated="true">2013-07-03</time></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS7新特征汇总[05]初窥UIKit动力(UIKit Dynamics)]]></title>
    <link href="http://BeyondVincent.github.io/blog/2013/06/16/88/"/>
    <updated>2013-06-16T00:00:00+08:00</updated>
    <id>http://BeyondVincent.github.io/blog/2013/06/16/88</id>
    <content type="html"><![CDATA[<p>提醒：这里是新特征汇总博文链接：<span style="text-decoration: underline;"><span style="color: #339966; text-decoration: underline;"><strong><a href="http://beyondvincent.com/2013/06/11/ios7%E6%96%B0%E7%89%B9%E5%BE%81%E6%B1%87%E6%80%BB/" target="_blank"><span style="color: #339966; text-decoration: underline;">iOS7新特征汇总</span></a></strong></span></span></p>

<div id="attachment_1359" class="wp-caption alignnone" style="width: 1141px">
  <a href="http://beyondvincent.com/wp-content/uploads/2013/06/QQ20130615-6.png"><img class="size-full wp-image-1359" alt="QQ20130615-6" src="http://beyondvincent.com/wp-content/uploads/2013/06/QQ20130615-6.png" width="1131" height="564" /></a><p class="wp-caption-text">
    此图来此WWDC视频
  </p>
</div>


<h2><strong><span style="color: #339966;">小引</span></strong></h2>

<p>通过之前的4篇文章，笔者把iOS7中的涉及到的一些新特征做了一个简单的介绍。本文将带领大家初窥新特征里面的一个topic：UIKit动力(<span style="color: #339966;">UIKit Dynamics</span>)。</p>

<p><strong><span style="color: #339966;">注1</span></strong>：关于UIKit Dynamics的中文名称：我在这里叫做UIKit动力，也有人叫UIKit动力模型和UIKit动态，总感觉怪怪的——所以大家在看到的时候不要在意即可。<br/>
<strong><span style="color: #339966;">注2</span></strong>：今天有开发者提起iOS7 beta还处于苹果的<span style="color: #339966;">NDA</span>(Non-Disclosure Agreement)状态，也就是说目前关于iOS7 beta的任何内容除了官方公开发表的信息外，作为开发者最多只能在苹果的开发者论坛上进行讨论交流，禁止在公开场合谈论关于iOS7 beta的信息。关于NDA感觉国外的意识比较好，就跟版权意识一样。由此笔者也在这里友情提醒一下：读者单纯的看本系列文章即可，在iOS7 release之前，<span style="color: #339966;">保持沉默状态</span>。<br/>
<strong><span style="color: #339966;">注3</span></strong>：本文在写作的时候参考了如下一些内容(具体内容请登录苹果开发者网站查阅)：</p>

<ol>
<li>WWDC 2013 session 206 — Getting Started with UIKit Dynamics</li>
<li>UIDynamicAnimator Class Reference</li>
<li>UIDynamicAnimatorDelegate Protocol Reference</li>
<li>UIDynamicBehavior Class Reference</li>
<li>UIDynamicItem Protocol Reference</li>
<li>UIDynamicItemBehavior Class Reference</li>
<li>UIKit Dynamics Catalog(Sample Code)</li>
</ol>


<h2><strong><span style="color: #339966;">UIKit动力简介</span></strong></h2>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/06/QQ20130615-5.png"><img alt="QQ20130615-5" src="http://beyondvincent.com/wp-content/uploads/2013/06/QQ20130615-5.png" width="1101" height="338" /></a></p>

<p><img class=" wp-image-1360 alignright" alt="code" src="http://beyondvincent.com/wp-content/uploads/2013/06/code.png" width="115" height="115" /></p>

<p>什么是UIKit动力？—— 一句话：<span style="color: #339966;">UIKit动力提供了一个模拟真实世界中力学相关的动画和交互系统</span>。比如重力、碰撞和吸附等。UIKit动力具有可组合、可重用和声明式的特点。</p>

<p>在程序中利用UIKit提供的接口来实现力学行为，可以减少80%的代码量。</p>

<p>&nbsp;</p>

<h2><span style="color: #339966;"><strong>UIKit动力架构</strong></span></h2>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/06/QQ20130616-8.png"><img class="alignnone size-full wp-image-1363" alt="QQ20130616-8" src="http://beyondvincent.com/wp-content/uploads/2013/06/QQ20130616-8.png" width="1031" height="459" /></a></p>

<p>如上图所示，UIKit动力系统中，涉及到如下4个内容：<span style="color: #339966;"><br /> </span></p>

<div title="Page 49">
  <img class=" wp-image-1365 alignright" alt="QQ20130616-9" src="http://beyondvincent.com/wp-content/uploads/2013/06/QQ20130616-9.png" width="240" height="165" /><span style="color: #339966;">UIDynamicAnimator：<span style="color: #333333;">UIDynamicAnimator介于iOS图形引擎和动力项(View)之间，</span></span><span style="color: #339966;"><span style="color: #333333;">具有如下功效</span>：<br /> </span></p> <ul>
    <li>
      提供动力行为的上下文
    </li>
    <li>
      根据ref view确定坐标系
    </li>
    <li>
      控制动力引擎
    </li>
    <li>
      维护着动力行为的状态
    </li>
  </ul>
  
  <p>
    UIDynamicAnimatorDelegate是与UIDynamicAnimator相关的一个delegate。主要用于动力行为被启动或者暂定时，做出的回应。也就是说，在动力行为运行期间，有两个事件（启动和暂定）可供我们使用。
  </p>
</div>


<p><span style="color: #339966;"><a href="http://beyondvincent.com/wp-content/uploads/2013/06/QQ20130616-10.png"><img class=" wp-image-1372 alignright" alt="QQ20130616-10" src="http://beyondvincent.com/wp-content/uploads/2013/06/QQ20130616-10.png" width="247" height="211" /></a>UIDynamicBehavior：<span style="color: #333333;">主要用来描述动力的行为。在iOS7中，默认提供了如下动力行为：</span></span></p>

<ul>
<li>UIAttachmentBehavior</li>
<li>UICollisionBehavior</li>
<li>UIDynamicItemBehavior</li>
<li>UIGravityBehavior</li>
<li>UIPushBehavior</li>
<li>UISnapBehavior objects</li>
</ul>


<p>动力行为可以在任意时间内进行添加或移除。另外动力行为可以是组合的，也可以被继承。</p>

<p>注意：这些动力行为是在二维空间进行的。</p>

<p><span style="color: #339966;">Reference View</span>：该用是用来初始化Animator用的，它的作用是给动力行为提供坐标系。</p>

<p><span style="color: #339966;">View</span>：在UIKit动力中，又称为动力项(dynamic item)。动力项是遵循UIDynamicItem协议的任意对象（可以是SDK中默认提供的，或者开发者自定义的）。在iOS7 beta中，View已经遵循了该协议，所以一般也会将View当做动力项——动力行为实际针对的对象。</p>

<h2><span style="color: #339966;"><strong>代码示例</strong></span></h2>

<p>下面笔者就通过一个例子，演示如何对一个view施加重力行为(UIGravityBehavior)。</p>

<p>上面介绍了一大堆，实际使用过程可能没那么复杂，不过原理才是最重要的。</p>

<p>新建一个Single View Application模板工程：BVGravityBehavior，在工程中，有如下属性：</p>

<pre class="wp-code-highlight prettyprint linenums:1">@property (nonatomic, weak) IBOutlet UIImageView *square1;
@property (nonatomic) UIDynamicAnimator* animator;</pre>


<p>另外还有两个方法：</p>

<pre class="wp-code-highlight prettyprint linenums:1">// 开始重力行为
- (IBAction)startGravity:(id)sender
{
    self.animator = [[UIDynamicAnimator alloc] initWithReferenceView:self.view];
    UIGravityBehavior* gravityBeahvior = [[UIGravityBehavior alloc] initWithItems:@[self.square1]];
    [self.animator addBehavior:gravityBeahvior];
}</pre>




<pre class="wp-code-highlight prettyprint linenums:1">// 停止重力行为
- (IBAction)stopGravity:(id)sender
{
    [self.animator removeAllBehaviors];
}</pre>


<p>运行程序，效果如下（如图没看到gif动画效果，点击下图，在新窗口中可以看到效果）：</p>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/06/1.gif" target="_blank"><img class="alignnone size-full wp-image-1383" alt="1" src="http://beyondvincent.com/wp-content/uploads/2013/06/1.gif" width="570" height="700" /></a></p>

<p>&nbsp;</p>

<p>也可以停止当前的动力行为：在重力行为运行过程中，如果点击停止，就可以停止重力行为，view的状态为停止前的状态。</p>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/06/2.gif" target="_blank"><img class="alignnone size-full wp-image-1384" alt="2" src="http://beyondvincent.com/wp-content/uploads/2013/06/2.gif" width="572" height="706" /></a></p>

<p>&nbsp;</p>

<h2><strong><span style="color: #339966;">代码下载</span></strong></h2>

<p><a href="https://github.com/BeyondVincent/iOS7-new-feature/tree/master/code/UIDynamic/BVGravityBehavior" target="_blank"><img class="alignnone size-full wp-image-561" alt="代码下载" src="http://beyondvincent.com/wp-content/uploads/2013/05/5555.png" width="150" height="150" /></a></p>

<p>&nbsp;</p>

<h2><span style="color: #339966;">小结</span></h2>

<p>本文对UIKit动力做了一个入门级别的介绍，并给出了一个小示例，演示了如何给view添加一个重力行为。在下一篇文章中，笔者将继续介绍UIKit动力。</p>

<p>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_</p>

<h2><span style="color: #339966;"><strong>强烈推荐</strong></span></h2>

<p>来自唐巧的一个微信公众账号：<span style="color: #339966;">iosDevTips</span>——基本每天都会有关于iOS开发的精彩内容分享。<br/>
来自唐巧的一个Google Group讨论组：<span style="text-decoration: underline;"><span style="color: #339966; text-decoration: underline;"><a href="https://groups.google.com/forum/#!forum/iosdevtips" target="_blank"><span style="color: #339966; text-decoration: underline;">iosDevTips</span></a></span></span></p>

<h2><span style="color: #339966;"><strong>新特征汇总更新通知方式</strong></span></h2>

<p>有新的内容我会通过下面的方式进行通知，欢迎关注：<br/>
新浪微博：<span style="text-decoration: underline;"><span style="color: #339966; text-decoration: underline;"><strong><a href="http://www.weibo.com/beyondvincent" target="_blank"><span style="color: #339966; text-decoration: underline;">beyondvincent</span></a></strong></span></span><br/>
腾讯微博：<span style="text-decoration: underline;"><span style="color: #339966; text-decoration: underline;"><strong><a href="http://t.qq.com/beyondvincent" target="_blank"><span style="color: #339966; text-decoration: underline;">beyondvincent</span></a></strong></span></span><br/>
微信公众账号：<strong>破船之家</strong><br/>
<a href="http://beyondvincent.com/wp-content/uploads/2013/03/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E8%B4%A6%E5%8F%B7-%E7%A0%B4%E8%88%B9%E4%B9%8B%E5%AE%B6.jpg"><img alt="微信公众账号-破船之家" src="http://beyondvincent.com/wp-content/uploads/2013/03/微信公众账号-破船之家-150x150.jpg" width="150" height="150" /></a></p>

<div>
</div>




<div>
  本文由<span style="text-decoration: underline;"><span style="color: #339966; text-decoration: underline;"><a href="http://beyondvincent.com/"><span style="color: #339966; text-decoration: underline;">破船</span></a></span></span>原创●转载请注明出处●<time datetime="2013-05-18T17:37:00+08:00" data-updated="true">2013-06-15</time>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS7新特征汇总[04]新特征介绍4]]></title>
    <link href="http://BeyondVincent.github.io/blog/2013/06/14/87/"/>
    <updated>2013-06-14T00:00:00+08:00</updated>
    <id>http://BeyondVincent.github.io/blog/2013/06/14/87</id>
    <content type="html"><![CDATA[<p>提醒：这里是新特征汇总博文链接：<span style="text-decoration: underline;"><span style="color: #339966; text-decoration: underline;"><strong><a href="http://beyondvincent.com/2013/06/11/ios7%E6%96%B0%E7%89%B9%E5%BE%81%E6%B1%87%E6%80%BB/" target="_blank"><span style="color: #339966; text-decoration: underline;">iOS7新特征汇总</span></a></strong></span></span></p>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/06/ios-7-logo.png"><img class="alignnone size-full wp-image-1345" alt="ios-7-logo" src="http://beyondvincent.com/wp-content/uploads/2013/06/ios-7-logo.png" width="1018" height="483" /></a></p>

<h2><strong><span style="color: #339966;">小引</span></strong></h2>

<p>上一篇文章（<a href="http://beyondvincent.com/?p=1321" target="_blank"><strong><span style="text-decoration: underline;"><span style="color: #339966; text-decoration: underline;"><span style="color: #339966; text-decoration: underline;">iOS7新特征汇总[03]新特征介绍3</span></span></span></strong></a>）中，笔者介绍了在iOS7中关于程序间的音频（inter-App Audio）、点对点的连接、新增的Framework相关内容。本文将继续介绍iOS7中的新特征，包括：已有Framework的改进、Objective-C和已经过时的API。</p>

<p><strong><span style="color: #339966;">注1：本文是关于新特征介绍的最后一篇，随后的博文，以wwdc2013内容为主，欢迎大家关注！</span></strong></p>

<h2><strong><span style="color: #339966;">已有Framework的改进（19个）</span></strong></h2>

<p>下面我们来看看iOS7中有明显修改的一些framework。如果要查看完整的新接口，请查看iOS 7.0 API Diffs。本部分内容看起来可能稍显枯燥，并且我没有对其做配图，所以读者可以挑选自己感兴趣的部分进行阅读也不妨。</p>

<div title="Page 16">
  <ul>
    <li>
      <strong><span style="color: #339966;">UIKit</span> <span style="color: #339966;">Framework</span></strong>
    </li>
  </ul>
  
  <p>
    UIKit Framework(UIKit.framework)主要做了如下改进：<br /> 1、所有的用户界面控件都做了更新，以与iOS7相适应。<br /> 2、UIKit动力可以让开发者模拟现实世界中的一些效果，例如在动画中使用重力行为。<br /> 3、Text Kit提供了复杂的文字编辑和显示功能。<br /> 4、UIView类新增加了如下内容：<br /> tintColor属性：可以使用一个tint color，并对view和它的subview有影响。关于如何使用tint colors，请看iOS 7 UI Transition Guide。
  </p>
  
  <pre class="wp-code-highlight prettyprint linenums:1">/*
-tintColor always returns a color. The color returned is the first non-default value in the receiver&#039;s superview chain (starting with itself).
If no non-default value is found, a system-defined color is returned.
If this view&#039;s -tintAdjustmentMode returns Dimmed, then the color that is returned for -tintColor will automatically be dimmed.
If your view subclass uses tintColor in its rendering, override -tintColorDidChange in order to refresh the rendering if the color changes.
*/
@property(nonatomic,retain) UIColor *tintColor NS_AVAILABLE_IOS(7_0);

/*</pre>
  
  <p>
    通过view可以创建基于关键帧的动画。同样也可以对view做出改变——特别是阻止任意正在执行的动画。<br /> 5、UIViewController类新增了如下内容：<br /> View controller之间的切换(transition)可以自定义、驱动式交互(driven interactively)，或者完全根据自己指定的切换方式来替换。<br /> 可以通过编程的方式指定View controller的status bar和visibility。系统会根据提供的信息来管理status bar style。当然，在程序的info.plist文件中，设置UIViewControllerBasedStatusBarAppearance键值也是可以的。如下代码是iOS7中新增的几个用来指定status bar的方法
  </p>
  
  <pre class="wp-code-highlight prettyprint linenums:1">// These methods control the attributes of the status bar when this view controller is shown. They can be overridden in view controller subclasses to return the desired status bar attributes.
- (UIStatusBarStyle)preferredStatusBarStyle;
- (BOOL)prefersStatusBarHidden;

// This should be called whenever the return values for the view controller&#039;s status bar attributes have changed. If it is called from within an animation block, the changes will be animated along with the rest of the animation block.
- (void)setNeedsStatusBarAppearanceUpdate;</pre>
  
  <p>
    6、UIMotionEffect类为运动效果定义了一些基本的行为——定义了一个view如何响应基于设备的运动。<br /> 7、Collection view支持UIKit动力(UIKit Dynamic)——这样可以将一些行为对象(behavior object)应用到Collection view的layout attribute中，以对collection view中的item做出相应的动画。<br /> 8、UIImage的ImageNamed:方法可以把检索存储在asset目录中的图片，这就提供了一种方法——管理并优化具有多种尺寸和分辨率的资源。<br /> 9、UIView和UIScreen提供了一个新的方法：snapshot——返回一个view，可以用来显示程序的内容。
  </p>
  
  <pre class="wp-code-highlight prettyprint linenums:1">/* Creating snapshots from existing snapshots (as a method to duplicate, crop or create a resizable variant) is supported. In cases where many snapshots are needed, creating a snapshot from a common superview and making subsequent snapshots from it can be more performant.
*/
@interface UIView (UISnapshotting)
- (UIView *)snapshot NS_AVAILABLE_IOS(7_0);
- (UIView *)resizableSnapshotFromRect:(CGRect)rect withCapInsets:(UIEdgeInsets)capInsets NS_AVAILABLE_IOS(7_0); // Resizable snapshots will default to stretching the center
@end</pre>
  
  <pre class="wp-code-highlight prettyprint linenums:1">@interface UIScreen (UISnapshotting)
- (UIView *)snapshot NS_AVAILABLE_IOS(7_0);
@end</pre>
  
  <p>
    10、UIKeyCommand类封装了从外围硬件键盘接收到的键盘事件。这些事件会被分发(delivered)到程序的响应链(responder chain)中以被处理。<br /> 11、UIFontDescriptor对象使用一个属性字典来描述字体。通过font descriptor可以与其它平台相互交互。<br /> 12、UIFont和UIFontDescriptor类支持动态调整字体大小，这样可以增加程序中文字的易读性——用户可以控制所有程序的字体大小。<br /> 13、UIActivity类现在支持新的一些activity类型，包括通过AirDrop发送数据，给内容到Safari阅读列表中，把数据发送到Flickr、Tencent Weibo和Vimeo。<br /> 14、UIApplicationDelegate协议新增了处理后台获取数据的操作。
  </p>
  
  <pre class="wp-code-highlight prettyprint linenums:1">/*! This delegate method offers an opportunity for applications with the "remote-notification" background mode to fetch appropriate new data in response to an incoming remote notification. You should call the fetchCompletionHandler as soon as you&#039;re finished performing that operation, so the system can accurately estimate its power and data cost.

This method will be invoked even if the application was launched or resumed because of the remote notification. The respective delegate methods will be invoked first. Note that this behavior is in contrast to application:didReceiveRemoteNotification:, which is not called in those cases, and which will not be invoked if this method is implemented. !*/
- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult result))completionHandler NS_AVAILABLE_IOS(7_0);

/// Applications with the "fetch" background mode may be given opportunities to fetch updated content in the background or when it is convenient for the system. This method will be called in these situations. You should call the fetchCompletionHandler as soon as you&#039;re finished performing that operation, so the system can accurately estimate its power and data cost.
- (void)application:(UIApplication *)application performFetchWithCompletionHandler:(void (^)(UIBackgroundFetchResult result))completionHandler NS_AVAILABLE_IOS(7_0);

// Applications using an NSURLSession with a background configuration may be launched or resumed in the background in order to handle the
// completion of tasks in that session, or to handle authentication. This method will be called with the identifier of the session needing
// attention. Once a session has been created from a configuration object with that identifier, the session&#039;s delegate will begin receiving
// callbacks. If such a session has already been created (if the app is being resumed, for instance), then the delegate will start receiving
// callbacks without any action by the application. You should call the completionHandler as soon as you&#039;re finished handling the callbacks.
- (void)application:(UIApplication *)application handleEventsForBackgroundURLSession:(NSString *)identifier completionHandler:(void (^)())completionHandler NS_AVAILABLE_IOS(7_0);</pre>
  
  <p>
    15、UIKit新增了引导访问模式(guided-access mode)——运行程序自己锁定，以防止被用户修改。这样的功能主要是为一些机构设计的，例如在学校——学生虽然携带了他们的设备，但是需要运行由学校提供的程序。<br /> 16、State还原功能运行保存和还原任意的对象。遵循UIStateRestoring协议的对象，当程序被切换到后台(background)时，可以把状态信息保存起来 ，之后程序被启动时，这些状态可以被还原。<br /> 17、Table view支持对row或其他元素高度的评估(estimating)，这样可以提升Table view的滚动性能。<br /> 更多关于UIKit framework的内容，请阅读UIKit Framework Reference。
  </p>
  
  <ul>
    <li>
      <strong><span style="color: #339966;">Store Kit Framework</span></strong>
    </li>
  </ul>
  
  <p>
    Store Kit framework(StoreKit.framework)已经迁移到新的订单系统(receipt system)，这样一来，开发者可以在自己的设备上验证内购(in-app purchase)。同样也可以在服务器上进行程序购买订单的验证。<br /> 更多关于新订单系统的使用，请阅读：Receipt Validation Programming Guide。
  </p>
  
  <ul>
    <li>
      <strong><span style="color: #339966;">Security Framework</span></strong>
    </li>
  </ul>
  
  <p>
    Security Framework(Security.framework)现在支持：通过iCloud，可以把密码在用户两台设备间进行同步。通过新的keychain属性((kSecAttrSyncronizable)，程序可以为iCloud标记它们的keychain item。<br /> 更多相关这个属性的内容，请看该framework的头文件。关于keychain更多信息，请看Keychain Services Programming Guide。
  </p>
  
  <ul>
    <li>
      <strong><span style="color: #339966;">Pass Kit Framework</span></strong>
    </li>
  </ul>
  
  <p>
    Pass Kit Framework(PassKit.ramework)新增了一些API——针对同时添加多个通行证(pass)，通行证文件的格式也做了相应的调整：
  </p>
  
  <ol>
    <li>
      新的key指定通行证的截止日期
    </li>
    <li>
      可以指定通行证只与特定的蓝牙信号相关
    </li>
    <li>
      利用新的属性来控制通行证的显示。可以把通行证进行归类，并在通行证的背面显示自定义的文字内容，以及控制显示在通行证上的时间值
    </li>
    <li>
      可以给通行证附带一些额外的数据信息，在程序中可以使用这些数据，不过并直接显示给用户
    </li>
    <li>
      可以指定那些data detector用于通行证的字段中
    </li>
  </ol>
  
  <p>
    更多关于如何在程序中使用Pass Kit的信息，请阅读Passbook Programming Guide。关于通行证文件的格式，请阅读Passbook Package Format Reference。
  </p>
  
  <ul>
    <li>
      <strong><span style="color: #339966;">OpenGL ES</span></strong>
    </li>
  </ul>
  
  <p>
    OpenGL ES做了如下新的扩展：
  </p>
  
  <ol>
    <li>
      <span style="color: #339966;">EXT_SRGB</span>支持sRBG帧缓冲区(framebuffer)操作
    </li>
    <li>
      <span style="color: #339966;">GL_APPLE_pvrtc_sRGB</span>支持将sRGB纹理数据压缩为PVRTC纹理格式
    </li>
    <li>
      <span style="color: #339966;">GL_APPLE_draw_instanced</span>和<span style="color: #339966;">GL_APPLE_draw_arrays</span>可以提升渲染的速度->当程序在绘制多个相同的实例对象时。
    </li>
  </ol>
  
  <p>
    现在可以在vertex shaders中访问纹理了；通过MAX_VERTEX_TEXTURE_IMAGE_UNITS属性决定你可以访问纹理的准确数目。
  </p>
  
  <ul>
    <li>
      <strong><span style="color: #339966;">MessageUI Framework</span></strong>
    </li>
  </ul>
  
  <p>
    在MessageUI framework中，<span style="color: #339966;">MFMessageComposeViewController</span>现在可以支持将附件添加到信息中。关于新接口内容，可以参看framework头文件。
  </p>
  
  <p>
    关于这个framework的类，请阅读Message UI Framework Reference。
  </p>
  
  <ul>
    <li>
      <strong><span style="color: #339966;">Media Player Framework</span></strong>
    </li>
  </ul>
  
  <p>
    在Media Player framework中，<span style="color: #339966;">MPVolumeView</span>类可以判断用户选择的无线路由(wireless route，例如AirPlay和Bluetooth)是否可用。你也可以判断无线路由当前是否可用。关于新接口信息，请参看framework的头文件。关于Media Player framework涉及到的类，请参看Media Player Framework Reference。
  </p>
  
  <ul>
    <li>
      <strong><span style="color: #339966;">Map Kit Framework</span></strong>
    </li>
  </ul>
  
  <p>
    关于Map Kit framework相关修改，笔者已经在这里介绍过：<span style="text-decoration: underline;"><span style="color: #339966;"><a title="固定链接到 iOS7新特征汇总[02]新特征介绍2" href="http://beyondvincent.com/2013/06/12/ios7%e6%96%b0%e7%89%b9%e5%be%81%e6%b1%87%e6%80%bb02%e6%96%b0%e7%89%b9%e5%be%81%e4%bb%8b%e7%bb%8d2/" target="_blank" rel="bookmark"><span style="color: #339966; text-decoration: underline;">iOS7新特征汇总[02]新特征介绍2</span></a></span></span>
  </p>
  
  <p>
    更多相关信息，请查阅Map Kit Framework Reference。
  </p>
  
  <ul>
    <li>
      <strong><span style="color: #339966;">Image I/O Framework</span></strong>
    </li>
  </ul>
  
  <p>
    Image I/O Framework(ImageIO.framework)现在提供了获取和设置image metadata的接口。
  </p>
  
  <p>
    更多相关接口信息，请看framework的头文件。关于framework类的介绍，请看Image I/O Reference Collection。
  </p>
  
  <ul>
    <li>
      <strong><span style="color: #339966;">iAd Framework</span></strong>
    </li>
  </ul>
  
  <p>
    iAd framework(iAd.framework)做了如下修改——让广告更好的融入到程序中：
  </p>
  
  <ol>
    <li>
      在<span style="color: #339966;">MPMoviePlayerController</span>类中的新方法可以让你在播放电影之前运行广告
    </li>
    <li>
      framework对<span style="color: #339966;">UIViewController</span>进行了扩展，让其更容易创建广告内容。现在，你可以对view controller进行适当的配置——在实际内容显示之前先显示出广告内容。
    </li>
  </ol>
  
  <p>
    关于新接口请看framework中的头文件。关于framework的介绍，请看Ad Support Framework Reference。
  </p>
  
  <ul>
    <li>
      <strong><span style="color: #339966;">Game Kit Framework</span></strong>
    </li>
  </ul>
  
  <p>
    关于Game Kit Framework(GameKit.framework)的改变，已经在这里介绍过：<span style="text-decoration: underline;"><span style="color: #339966;"><a title="固定链接到 iOS7新特征汇总[02]新特征介绍2" href="http://beyondvincent.com/2013/06/12/ios7%e6%96%b0%e7%89%b9%e5%be%81%e6%b1%87%e6%80%bb02%e6%96%b0%e7%89%b9%e5%be%81%e4%bb%8b%e7%bb%8d2/" target="_blank" rel="bookmark"><span style="color: #339966; text-decoration: underline;">iOS7新特征汇总[02]新特征介绍2</span></a></span></span>
  </p>
  
  <p>
    更多相关介绍，请看Game Kit Framework Reference。
  </p>
  
  <ul>
    <li>
      <strong><span style="color: #339966;">Foundation Framework</span></strong>
    </li>
  </ul>
  
  <p>
    Foundation framework(Foundation.framework)主要做了如下改进：
  </p>
  
  <ol>
    <li>
      <span style="color: #339966;">NSURLSession</span>类是一个新增的类，主要用于程序在后台运行时，对网络资源的操作。这个类替换了NSURLConnection和相关delegate；同样也替换了NSURLDownload和相关delegate。
    </li>
    <li>
      <span style="color: #339966;">NSURLComponents</span>类也是一个新增类——用来解析URL的构建。这个类在解析URL的时候支持URI标准(rfc3986/STD66)。
    </li>
    <li>
      <span style="color: #339966;">NSNetService</span>和<span style="color: #339966;">NSNetServiceBrowser</span>用于在蓝牙和Wi-Fi中点对点的查找。
    </li>
    <li>
      <span style="color: #339966;">NSURLCredential</span>和<span style="color: #339966;">NSURLCredentialStorage</span>两个类可以用来创建同步策略的证书，并可以从iCloud中移除相关同步策略证书。
    </li>
    <li>
      <span style="color: #339966;">NSURLCache</span>、<span style="color: #339966;">NSURLCredentialStorage</span>和<span style="color: #339966;">NSHTTPCookieStorage</span>三个类支持存储请求的异步处理。
    </li>
    <li>
      <span style="color: #339966;">NSCalendar</span>类支持新的日历类型。
    </li>
  </ol>
  
  <p>
    更多关于新的接口，请看framework中 大头文件和Foundation release notes。关于该framework类的介绍，请看Foundation Framework Reference。
  </p>
  
  <ul>
    <li>
      <strong><span style="color: #339966;">Core Telephony Framework</span></strong>
    </li>
  </ul>
  
  <p>
    Core Telephony framework(CoreTelephony.framework)现在可以获取到设备使用的无线电信息：当前的信号强度、cell ID。由运营商开发的相关程序，同样可以通过预定运营商相关服务，来对他们的程序进行验证。
  </p>
  
  <p>
    更多相关信息请看Core Telephony Framework Reference。
  </p>
  
  <ul>
    <li>
      <strong><span style="color: #339966;">Core Motion Framework</span></strong>
    </li>
  </ul>
  
  <p>
    Core Motion framework(CoreMotion.framework)现在支持step counting(类似计步器)和运动的跟踪。关于step counting——framework通过检测用户的运动，然后根据运动信息计算出步数（貌似很牛叉的样子，不知道准确度如何了）。由于运动信息是由系统检测的，所以即使当程序没有运行的时候，系统也可以持续的收集step数据。通过这样的功能，framework也能区分出不同的运动类型，例如walking、running或者automobile——这对于导航类程序来说，就可以使用这些数据，直接修改用户的运动类型。
  </p>
  
  <p>
    更多相关信息，请看Core Motion Framework Reference。
  </p>
  
  <ul>
    <li>
      <strong><span style="color: #339966;">Core Location Framework</span></strong>
    </li>
  </ul>
  
  <p>
    Core Location framework(CoreLocation.framework)可以通过蓝牙设备来测距。通过测距可以确定附近蓝牙设备的范围，并作出相应的反应。例如，在博物馆的画廊里面，可能有一些蓝牙信号，供参观者通过相关程序显示出画廊的入口和出口。framework还支持推迟位置的更新的通知，直到特定的时间或者用户移动距离超过了最小值。
  </p>
  
  <p>
    更多相关信息，请看Core Location Framework Reference。
  </p>
  
  <ul>
    <li>
      <strong><span style="color: #339966;">Core Foundation Framework</span></strong>
    </li>
  </ul>
  
  <p>
    Core Foundation framework(CoreFoundation.framework)现在支持在派送队列(dispatch queues)中进行流对象的调度。
  </p>
  
  <p>
    更多相关信息，请看Core Foundation Framework Reference。
  </p>
  
  <ul>
    <li>
      <strong><span style="color: #339966;">Core Bluetooth Framework</span></strong>
    </li>
  </ul>
  
  <p>
    Core Bluetooth framework(CoreBluetooth.framework)做了如下改进：
  </p>
  
  <ol>
    <li>
      <span style="line-height: 13px;">该framework现在可以把<span style="color: #339966;">CBCentral</span>和<span style="color: #339966;">CBPeripheral</span>对象的状态信息进行保存，并且在程序启动的时候还原——这个功能可以支持相关蓝牙设备的长期行为。</span>
    </li>
    <li>
      CBCentral和CBPeripheral类现在使用NSUUID对象来存储唯一标示。
    </li>
    <li>
      现在可以从<span style="color: #339966;">CBCentralManager</span>中同步的获取一个CBPeripheral对象。
    </li>
  </ol>
  
  <p>
    更多相关信息，请看Core Bluetooth Framework Reference。
  </p>
  
  <ul>
    <li>
      <strong><span style="color: #339966;">AV Foundation Framework</span></strong>
    </li>
  </ul>
  
  <p>
    AV Foundation framework(AVFoundation.framework)做了如下改进：
  </p>
  
  <ul>
    <li>
      <span style="color: #339966;">AVAudioSession</span>支持一些新的行为：可以选择音频输入的首选项，包括来自内置麦克风的音频；支持多通道的输入和输出
    </li>
  </ul>
</div>




<div title="Page 16">
  <ul>
    <li>
      <span style="line-height: 13px;"><span style="color: #339966;">AVVideoCompositing</span>和相关的类支持自定义视频合成器(video compositor)</span>
    </li>
    <li>
      <span style="color: #339966;">AVSpeechSynthesizer</span>和相关的类提供了语音合成功能
    </li>
    <li>
      <span style="color: #339966;">capture</span>类新增支持的功能有：查找camaera支持的格式、支持60fps录制、在录制和预览的时候，Video的放大(真实和数字化)、实时查找机器可读的条形码数据、自动对焦范围的限制、采集录制过程中访问时钟。
    </li>
  </ul>
  
  <p>
    另外还有很多信息，笔者就不在这里一一列出，读者可以查阅AV Foundation Framework Reference。
  </p>
</div>




<div title="Page 16">
  <ul>
    <li>
      <strong><span style="color: #339966;">Accelerate Framework</span></strong>
    </li>
  </ul>
  
  <p>
    Accelerate framework(Accelerate.framework)做了如下改进：
  </p>
  
  <ol>
    <li>
      支持Core Graphics数据类型的操作
    </li>
    <li>
      支持灰度图片：每个像素为1、2或4位
    </li>
    <li>
      可以在不同图像格式之间进行转换
    </li>
    <li>
      支持biguad(IIR)操作
    </li>
  </ol>
  
  <p>
    更多相关信息请看Accelerate Framework Reference。
  </p>
  
  <div title="Page 17">
    <div title="Page 18">
      <div title="Page 18">
        <div title="Page 18">
          <h2 title="Page 19">
            <span style="color: #339966;"><b>Objective-C</b></span>
          </h2>
          
          <p>
            Objective-C加强了对模块(module)的支持，这样可以加快build时间，以及工程索引的时间。用Xcode 5创建的新工程，默认支持模块，如果是之前的一个工程，必须明确的启动模块的支持：通过修改该工程的Enable Modules设置。
          </p>
          
          <div title="Page 18">
            <div>
              <div>
                <p>
                  <strong style="font-size: 1.5em;"><span style="color: #339966;">已经过时的API</span></strong>
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>


<p>时不时的，苹果会对一些API增加deprecation 宏，表示在开发中，相关的API不应该继续被使用了。当然，遇到deprecation时，相关api并不是立即就过时了，相反，在一定期限内，苹果会提供相关功能的api，进行过渡。</p>

<p>作为开发者来说，尽量避免在代码中使用过时的api是非常重要的——至少，在新写的代码中不要继续使用过时的api了，另外，对于已有的工程中，如果使用了过时的api，也尽量对代码进行更新。</p>

<p>目前，在iOS7中，过时的api有如下一些：</p>

<ol>
<li>Map Kit framework中的<span style="color: #339966;">MKOverlayView</span>和它相关的子类都已经过时了。并且使用<span style="color: #339966;">MKOverlayRenderer</span>类来代替。更多相关资料，请看Map Kit Framework Reference。</li>
<li>在Audio Toolbox framework中的<span style="color: #339966;">AudioSession</span> API已经过时了。程序中应该使用AV Foundation framework中的<span style="color: #339966;">AVAudioSession</span>类来代替。</li>
<li>在Core Location framework中的<span style="color: #339966;">CLRegion</span>类已经被<span style="color: #339966;">CLCircularRegion</span>类取代了。只不过CLRegion类还继续存在着——当做一个抽象的基类——以对geographic和beacon region的支持。</li>
<li><span style="color: #339966;">CBCentral</span>中的属性<span style="color: #339966;">UUID</span>已经过时了。现在使用<span style="color: #339966;">identifier</span>属性来对central对象进行唯一标示。</li>
<li>Game Kit framework中也有一些过时的api，主要是为了新功能提供更好的支持。相关信息请看上面提到的参考资料。</li>
<li>UIKit中有如下一些过时的内容：<span style="color: #339966;">UIViewController</span>的<span style="color: #339966;">wantsFullScreenLayout</span>属性已经过时。在iOS7以及之后的版本中，view controller一直都是全屏布局；<span style="color: #339966;">UIPopovercontroller</span>类不再支持箭头朝向的概念；现在支持内容呈现（presentation）朝向。<span style="color: #339966;">UIColor</span>对象提供的背景纹理已经不存在了。NSString中的许多功能已经过时，建议使用新的功能。</li>
<li>在<span style="color: #339966;">libsyscall</span>库中的<span style="color: #339966;">gethostuuid</span>方法已经过时。</li>
<li>iOS7以及之后的版本中，如果请求获取iOS设备的MAC地址，系统会返回02:00:00:00:00:00。如果需要唯一标示设备，使用UIDevice的identifierForVendor属性代替。（在程序中，如果需要自己的广告标示符，那么应该考虑使用ASIdentifierManager的advertisingIdentifier属性替代。）</li>
</ol>


<p>关于过时API完整的列表，请看iOS 7.0 API Diffs。</p>

<p>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_</p>

<h2><span style="color: #339966;"><strong>强烈推荐</strong></span></h2>

<p>来自唐巧的一个微信公众账号：<span style="color: #339966;">iosDevTips</span>——基本每天都会有关于iOS开发的精彩内容分享。<br/>
来自唐巧的一个Google Group讨论组：<span style="text-decoration: underline;"><span style="color: #339966; text-decoration: underline;"><a href="https://groups.google.com/forum/#!forum/iosdevtips" target="_blank"><span style="color: #339966; text-decoration: underline;">iosDevTips</span></a></span></span></p>

<h2><span style="color: #339966;"><strong>新特征汇总更新通知方式</strong></span></h2>

<p>有新的内容我会通过下面的方式进行通知，欢迎关注：<br/>
新浪微博：<span style="text-decoration: underline;"><span style="color: #339966; text-decoration: underline;"><strong><a href="http://www.weibo.com/beyondvincent" target="_blank"><span style="color: #339966; text-decoration: underline;">beyondvincent</span></a></strong></span></span><br/>
腾讯微博：<span style="text-decoration: underline;"><span style="color: #339966; text-decoration: underline;"><strong><a href="http://t.qq.com/beyondvincent" target="_blank"><span style="color: #339966; text-decoration: underline;">beyondvincent</span></a></strong></span></span><br/>
微信公众账号：<strong>破船之家</strong><br/>
<a href="http://beyondvincent.com/wp-content/uploads/2013/03/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E8%B4%A6%E5%8F%B7-%E7%A0%B4%E8%88%B9%E4%B9%8B%E5%AE%B6.jpg"><img alt="微信公众账号-破船之家" src="http://beyondvincent.com/wp-content/uploads/2013/03/微信公众账号-破船之家-150x150.jpg" width="150" height="150" /></a></p>

<div>
</div>




<div>
  本文由<span style="text-decoration: underline;"><span style="color: #339966; text-decoration: underline;"><a href="http://beyondvincent.com/"><span style="color: #339966; text-decoration: underline;">破船</span></a></span></span>原创●转载请注明出处●<time datetime="2013-05-18T17:37:00+08:00" data-updated="true">2013-06-14</time>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS7新特征汇总[03]新特征介绍3]]></title>
    <link href="http://BeyondVincent.github.io/blog/2013/06/13/86/"/>
    <updated>2013-06-13T00:00:00+08:00</updated>
    <id>http://BeyondVincent.github.io/blog/2013/06/13/86</id>
    <content type="html"><![CDATA[<p>提醒：这里是新特征汇总博文链接：<span style="text-decoration: underline;"><span style="color: #339966; text-decoration: underline;"><strong><a href="http://beyondvincent.com/2013/06/11/ios7%E6%96%B0%E7%89%B9%E5%BE%81%E6%B1%87%E6%80%BB/" target="_blank"><span style="color: #339966; text-decoration: underline;">iOS7新特征汇总</span></a></strong></span></span></p>

<h2><strong><span style="color: #339966;">小引</span></strong></h2>

<p>上一篇文章（<a href="http://beyondvincent.com/?p=1306" target="_blank"><strong><span style="text-decoration: underline;"><span style="color: #339966; text-decoration: underline;"><span style="color: #339966; text-decoration: underline;">iOS7新特征汇总[02]新特征介绍2</span></span></span></strong></a>）中，笔者介绍了在iOS7中关于游戏、地图和AirDrop相关内容。本文将继续介绍iOS7中的新特征：程序间的音频（inter-App Audio）、点对点的连接、新增的Framework。</p>

<h2><strong><span style="color: #339966;">程序间的音频（inter-App Audio）</span></strong></h2>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/06/InterAppAudio2013.png"><img class="alignnone size-full wp-image-1325" alt="InterAppAudio2013" src="http://beyondvincent.com/wp-content/uploads/2013/06/InterAppAudio2013.png" width="853" height="480" /></a></p>

<p><span style="color: #339966;">Audio Unit framework (AudioUnit.framework)</span>现在支持程序间的音频了——可以在同一台设备上不同的两个程序之间发送MIDI命令和音频流。例如，通过该功能，你可以使用一个程序来录制音乐，然后将录制的音乐音乐发送到另外一个能对音乐进行处理的程序中。</p>

<p>为了公开（vend）你程序中的音频数据，需要发布一个<span style="color: #339966;">AURemoteIO</span>实例来充当音频组件——对其它进程是可见的。在iOS7里面，要在另外一个程序中使用程序间的音频功能，请使用音频组件发现接口。【翻译自苹果官网中的如下内容，还不是太理解具体意思，如果大家知道的话，可以告诉我，谢谢！】</p>

<blockquote><p><em>To vend your app’s audio data, publish a AURemoteIO instance as an audio component that is visible to other processes. to use audio features from another app, use the audio component discovery interface in iOS 7.</em></p></blockquote>

<p>更多相关内容请看：Audio Toolbox Framework Reference</p>

<h2><strong><span style="color: #339966;">点对点的连接</span></strong></h2>

<p><a href="http://beyondvincent.com/wp-content/uploads/2013/06/apple-wwdc-2013-3a.jpg"><img class="alignnone size-full wp-image-1326" alt="apple-wwdc-2013-3a" src="http://beyondvincent.com/wp-content/uploads/2013/06/apple-wwdc-2013-3a.jpg" width="680" height="400" /></a></p>

<p>通过<span style="color: #339966;">Multipeer Connectivity framework (MultipeerConnectivity.framework)</span>可以查找附近的设备，并直接与这些设备进行通讯——不需要通过互联网。该Framework具有这样的特点：很容易的创建多点（multipeer）会话、支持稳定、可靠和实时的数据传输。可以看出，通过该Framework，你的程序可以与附近的设备进行通讯，并做到数据的无缝交换。</p>

<p>该Framework提供了两种方式来查找并管理网络服务：编程方式和基于UI选项。可以使用<span style="color: #339966;">MCNearbyServiceBrowser</span>类以编程的方式查找并管理设备。另外，我们可以将<span style="color: #339966;">MCPeerPickerViewController</span>集成到程序中——用来显示用户可以选择的设备列表。</p>

<p>更多相关信息，请阅读：Multipeer Connectivity Framework Reference</p>

<h2><strong><span style="color: #339966;">新增的Framework</span></strong></h2>

<p>在iOS7中，新增了如下一些Framework：</p>

<ol>
<li>Game Controller framework(<span style="color: #339966;">GameController.framework</span>)：提供了与游戏相关的硬件通讯接口。</li>
<li>Sprite Kit framework(<span style="color: #339966;">SpriteKit.framework</span>)：提供了基于精灵（sprite-based）的动画和图形渲染。</li>
<li>Multipeer Connectivity framework(<span style="color: #339966;">MultipeerConnectivity.framework</span>)：提供设备间点对点通讯的功能。</li>
<li>JavaScript Core framework (<span style="color: #339966;">JavaScriptCore.framework</span>)：提供了用Objective-C封装的大量标准JavaScript对象。通过该framework可以对JavaScript代码进行评估（evaluate），以及解析JSON。</li>
<li>Media Accessibility framework (<span style="color: #339966;">MediaAccessibility.framework</span>)：管理媒体文件中字幕（closed-caption）内容的显示。通过该Framework与settings的结合，可以让用户开启字幕的显示。</li>
<li>Safari Services framework (<span style="color: #339966;">SafariServices.framework</span>)：通过该framework，可以通过编程的方式将URL添加到用户的Safari阅读列表中。</li>
</ol>


<p><a href="http://beyondvincent.com/wp-content/uploads/2013/06/QQ20130612-20.png"><img class="alignnone size-full wp-image-1327" alt="QQ20130612-20" src="http://beyondvincent.com/wp-content/uploads/2013/06/QQ20130612-20.png" width="970" height="499" /></a></p>

<p>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_<strong>_</strong>_</p>

<h2><span style="color: #339966;"><strong>强烈推荐</strong></span></h2>

<p>来自唐巧的一个微信公众账号：<span style="color: #339966;">iosDevTips</span>——基本每天都会有关于iOS开发的精彩内容分享。<br/>
来自唐巧的一个Google Group讨论组：<span style="text-decoration: underline;"><span style="color: #339966; text-decoration: underline;"><a href="https://groups.google.com/forum/#!forum/iosdevtips" target="_blank"><span style="color: #339966; text-decoration: underline;">iosDevTips</span></a></span></span></p>

<h2><span style="color: #339966;"><strong>新特征汇总更新通知方式</strong></span></h2>

<p>有新的内容我会通过下面的方式进行通知，欢迎关注：<br/>
新浪微博：<span style="text-decoration: underline;"><span style="color: #339966; text-decoration: underline;"><strong><a href="http://www.weibo.com/beyondvincent" target="_blank"><span style="color: #339966; text-decoration: underline;">beyondvincent</span></a></strong></span></span><br/>
腾讯微博：<span style="text-decoration: underline;"><span style="color: #339966; text-decoration: underline;"><strong><a href="http://t.qq.com/beyondvincent" target="_blank"><span style="color: #339966; text-decoration: underline;">beyondvincent</span></a></strong></span></span><br/>
微信公众账号：<strong>破船之家</strong><br/>
<a href="http://beyondvincent.com/wp-content/uploads/2013/03/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E8%B4%A6%E5%8F%B7-%E7%A0%B4%E8%88%B9%E4%B9%8B%E5%AE%B6.jpg"><img alt="微信公众账号-破船之家" src="http://beyondvincent.com/wp-content/uploads/2013/03/微信公众账号-破船之家-150x150.jpg" width="150" height="150" /></a></p>

<div>
</div>




<div>
  本文由<span style="text-decoration: underline;"><span style="color: #339966; text-decoration: underline;"><a href="http://beyondvincent.com/"><span style="color: #339966; text-decoration: underline;">破船</span></a></span></span>原创●转载请注明出处●<time datetime="2013-05-18T17:37:00+08:00" data-updated="true">2013-06-13</time>
</div>



]]></content>
  </entry>
  
</feed>
