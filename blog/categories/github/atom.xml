<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: github | 破船之家]]></title>
  <link href="http://BeyondVincent.github.io/blog/categories/github/atom.xml" rel="self"/>
  <link href="http://BeyondVincent.github.io/"/>
  <updated>2014-03-24T00:11:12+08:00</updated>
  <id>http://BeyondVincent.github.io/</id>
  <author>
    <name><![CDATA[破船(BeyondVincent)]]></name>
    <email><![CDATA[beyondvincent@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[利用Octopress搭建一个Github博客]]></title>
    <link href="http://BeyondVincent.github.io/blog/2013/08/03/108-creating-a-github-blog-using-octopress/"/>
    <updated>2013-08-03T13:38:00+08:00</updated>
    <id>http://BeyondVincent.github.io/blog/2013/08/03/108-creating-a-github-blog-using-octopress</id>
    <content type="html"><![CDATA[<p><img src="/images/2013/08/github_page_and-octopress.png"></p>

<h2>小引</h2>

<p><a href="http://octopress.org/"><code>Octopress</code></a>是利用<a href="http://github.com/mojombo/jekyll"><code>Jekyll</code></a>博客引擎开发的一个博客系统，生成的静态页面能够很好的在github page上展现。号称是hacker专属的一个博客系统(<code>A blogging framework for hackers.</code>)</p>

<p>根据大家的反应，本文我就来介绍一下如何在苹果电脑(OS X 10.8.3)利用Octopress搭建一个Github博客。本文需要读者熟悉一些shell命令，并掌握基本的git操作。</p>

<!--more-->


<h3>目录</h3>

<ul>
<li>1、安装Ruby</li>
<li>2、安装Octopress</li>
<li>3、配置Octopress</li>
<li>4、将博客部署到GitHub上</li>
<li>5、开始写博客</li>
<li>6、更多操作</li>
<li>7、小结</li>
</ul>


<h3>1、安装Ruby</h3>

<p>Octopress需要Ruby环境，RVM(Ruby Version Manager)负责安装和管理Ruby的环境。所以我们先在终端输入如下命令，来安装RVM：</p>

<p><code>
curl -L https://get.rvm.io | bash -s stable --ruby
</code></p>

<p>接着是安装Ruby 1.9.3，在终端依次运行如下命令：</p>

<p><code>
rvm install 1.9.3
rvm use 1.9.3
rvm rubygems latest
</code>
完成上面的操作之后，运行<code>ruby --version</code>应该可以看到ruby 1.9.3环境已经安装好了。</p>

<p>参考：<a href="http://octopress.org/docs/setup/rvm/">Installing Ruby With RVM</a></p>

<h3>2、安装Octopress</h3>

<p>在安装Octopress之前，请确保你的电脑上已经安装有git了，在终端输入<code>git --version</code>，应该可以看到电脑中的git版本(我电脑上输出:<code>git version 1.7.12.4 (Apple Git-37)</code>)，如果没有显示相关内容，请先安装<a href="http://git-scm.com/">git</a>。</p>

<p>git安装之后，利用git命令将octopress从github上clone到本机，如下命令：</p>

<p><code>
git clone git://github.com/imathis/octopress.git octopress
cd octopress    # If you use RVM, You'll be asked if you trust the .rvmrc file (say yes).
ruby --version  # Should report Ruby 1.9.3
</code>
接着安装相关依赖项：</p>

<p><code>
gem install bundler
rbenv rehash    # If you use rbenv, rehash to be able to run the bundle command
bundle install
</code>
最后安装默认的Octopress 主题。
<code>
rake install
</code></p>

<p>参考： <a href="http://octopress.org/docs/setup/">Octopress Setup</a></p>

<h3>3、配置Octopress</h3>

<p>Octopress的作者已经尽量让配置简化了。大多数情况下只需要配置<code>_config.yml</code>和<code>Rakefile</code>文件即可。其中Rakefile是跟博客部署相关，一般情况下并不需要修改这个文件，除非使用了rsync。</p>

<p><em>config.yml是博客重要的一个配置文件，在</em>config.yml文件中有三大配置项：<code>Main Configs</code>、<code>Jekyll &amp; Plugins</code>和<code>3rd Party Settings</code>。</p>

<p>一般，该文件中其中<code>url</code>是必须要填写的，这里的url是在github上创建的一个仓库地址，具体请看第四步中创建的地址。另外再修改一下<code>title</code>、<code>subtitle</code>和<code>author</code>，根据需求，在开启一些第三方组件服务。</p>

<p>关于_config.yml文件中的更多内容，请看这里的内容：<a href="http://octopress.org/docs/configuring/">Configuring Octopress</a></p>

<p>建议：最好把里面的twitter相关的信息全部删掉，否则由于GFW的原因，将会造成页面load很慢。同理，修改定制文件/source/_includes/custom/head.html 把google的自定义字体去掉。from<a href="http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/"><code>唐巧的博文中—配置</code></a>。</p>

<h3>4、将博客部署到GitHub上</h3>

<p>Github的<a href="http://pages.github.com/"><code>Page service</code></a>可以免费托管博客，并且还可以自定义域名。</p>

<p>首先需要在GitHub上<a href="https://github.com/new"><code>创建一个仓库</code></a>，并将仓库名称按照这样的方式进行命名：<code>username.github.com</code>或<code>organization.github.com</code>。等后面配置完毕之后，我们就可以在浏览器中使用页面地址<code>http://username.github.com</code>来访问我们的博客。一般来说，我们希望在将博客的源码放到source分支下，并把生成的内容提交到master分支。</p>

<p>创建好仓库之后，我们需要利用octopress的一个<code>配置rake任务</code>来自动配置上面创建的仓库：可以让我们方便的部署GitHub page。在终端输入如下命令：</p>

<p><code>
$ rake setup_github_pages
</code>
上面的命令会做一些事情(详细介绍看下面给出的参考链接)。其中最主要的就是创建一个<code>_deploy</code>目录，目录用来存放部署到master分支的内容。期间会要求你输入仓库的url，根据提示，进行输入即可。</p>

<p>完成上面的命令之后，我们就可以生成博客并真正的部署到仓库中了。执行如下命令：
<code>
rake generate
rake deploy
</code>
上面的命令首先生成博客文件，并将生成的博客文件拷贝到<code>_deploy/</code>目录下，然后将这些内容添加到git中，并commit和push到仓库的master分支。</p>

<p>现在可以访问<code>http://username.github.com</code>了。注意：有时候可能会有延时，要等几分钟才能打开。</p>

<p>至此，我们的博客已经完成基本的部署，不过博客的source需要单独提交，执行如下命令就可以将source提交到仓库的source分支下。
<code>
$ git add .
$ git commit -m 'Initial source commit'
$ git push origin source
</code></p>

<p>如果在部署到仓库之前，需要先预览一下博客，可以在终端输入<code>rake preview</code>命令，然后就能在浏览器中进行本地预览访问了：<code>http://127.0.0.1:4000/</code>或<code>http://localhost:4000/</code>，效果跟仓库中的一样。</p>

<p>参考：<a href="http://octopress.org/docs/deploying/">Deploying to Github Pages</a></p>

<h3>5、开始写博客</h3>

<p>Octopress为我们提供了一些task来创建博文和页面。博文必须存储在<code>source/_posts</code>目录下，并且需要按照Jekyll的命名规范对文章进行命名：<code>YYYY-MM-DD-post-title.markdown</code>。文章的名字会被当做url的一部分，而其中的日期用于对博文的区分和排序。</p>

<p>通过Octopress提供的task可以正确的按照命名规范创建一个博文，并且在博文中会附带常用的一些yaml元数据。只需要在终端输入如下命令：</p>

<p><code>
rake new_post["title"]
</code>
其中title为博文的文件名，创建出来的文件默认是markdown格式。上面的命令会创建出这样一个文件：<code>source/_posts/2013-08-03-title.markdown</code>。打开这个文件，可以看到里面有如下一些内容了(告诉Jekyll博客引擎如何处理博文和页面)：</p>

<h2>```</h2>

<p>layout: post
title: &ldquo;title&rdquo;
date: 2013-08-03 16:36
comments: true</p>

<h2>categories: </h2>

<p>```
接着我们就可以在这个文件中写我们的博文啦。完成之后，我们可以预览和部署博文。下面是创建并部署博文的一个完整过程：</p>

<p><code>
$ rake new_post["New Post"]
$ rake generate
$ git add .
$ git commit -am "Some comment here."
$ git push origin source
$ rake deploy
</code></p>

<p>参考：<a href="http://octopress.org/docs/blogging/">Blogging Basics</a></p>

<h3>6、更多操作</h3>

<p>在搭建博客的时候，我们可能会对博客做一些配置，例如添加评论、域名解析、分享等。这些内容我写在另外一篇文章中，会经常更新，请前往观看：<a href="http://beyondvincent.com/blog/2013/07/27/107-hello-page-of-github/"><code>你好！github页面</code></a>。</p>

<h3>7、小结</h3>

<p>本文介绍了如何利用Octopress搭建一个Github博客。大家在搭建的时候，要是遇到问题，可以回复我。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[你好！github页面]]></title>
    <link href="http://BeyondVincent.github.io/blog/2013/07/27/107-hello-page-of-github/"/>
    <updated>2013-07-27T14:44:00+08:00</updated>
    <id>http://BeyondVincent.github.io/blog/2013/07/27/107-hello-page-of-github</id>
    <content type="html"><![CDATA[<p><img src="/images/2013/07/wordpress_to_octopress.png"></p>

<h3>大家好，我是破船！欢迎大家关注我的小站！</h3>

<p>我写博文经历了这些平台：
百度空间-><a href="http://www.devdiv.com/home.php?mod=space&amp;uid=12&amp;do=blog&amp;view=me&amp;from=space"><code>devdiv</code></a>><a href="http://blog.sina.com.cn/beyondvincent"><code>新浪博客</code></a>&ndash;><a href="http://blog.csdn.net/beyondvincent"><code>CSDN</code></a>&ndash;><code>wordpress</code>&ndash;><code>octopress</code>(现在)</p>

<!--more-->


<p>用wordpress搭建的博客，用了4个月，由于有好多麻烦事(备份、空间和流量等各种不爽)，现在果断在github上配合octopress搭建一个博客。</p>

<p>由于<code>git</code>和<a href="http://en.wikipedia.org/wiki/Markdown"><code>markdown</code></a>对我来说就是小白，所以搭建的时间断断续续持续了约一周。其实网上已经有很好的参考资料了，只要照着弄，很容易就能搭建好的。</p>

<p>这篇文章是第一篇，我用的markdown编辑器是<a href="http://mouapp.com/"><code>Mou</code></a>，感觉不错。</p>

<p>下面是一些在mac机器上用octopress写博文需要用到的操作(持续更新)</p>

<h3>目录</h3>

<ul>
<li>发表并部署博文</li>
<li>添加多说评论功能</li>
<li>起草文章 暂不公开</li>
<li>域名解析</li>
<li>添加百度统计和google analytics</li>
</ul>


<h3>发表并部署博文</h3>

<p><code>
$ rake new_post["New Post"]
$ rake generate
$ git add .
$ git commit -am "Some comment here."
$ git push origin source
$ rake deploy
</code></p>

<h3>添加多说评论功能</h3>

<h4>A 获取<code>short_name</code></h4>

<p>去多说网注册账号，获取站点的short_name</p>

<h4>B 在<code>_config.yml</code>文件中添加如下内容</h4>

<p>```</p>

<h1>duoshuo comments</h1>

<p>duoshuo_comments: true
duoshuo_short_name: yourname
```</p>

<h4>C 在<code>source/_layouts/post.html</code>中添加多说评论模块</h4>

<p>```
｛% if site.duoshuo_short_name and site.duoshuo_comments == true and page.comments == true %｝
  <section></p>

<pre><code>&lt;h1&gt;Comments&lt;/h1&gt;
&lt;div id="comments" aria-live="polite"&gt;｛% include post/duoshuo1.html %｝&lt;/div&gt;
</code></pre>

<p>  </section>
｛% endif %｝
```</p>

<h4>D 创建<code>source/_includes/post/duoshuo.html</code>，并填入如下内容</h4>

<p>```</p>

<!-- Duoshuo Comment BEGIN -->


<div class="ds-thread"></div>


<script type="text/javascript">
  var duoshuoQuery = {short_name:"beyondvincent"};
  (function() {
    var ds = document.createElement('script');
    ds.type = 'text/javascript';ds.async = true;
    ds.src = 'http://static.duoshuo.com/embed.js';
    ds.charset = 'UTF-8';
    (document.getElementsByTagName('head')[0] 
    || document.getElementsByTagName('body')[0]).appendChild(ds);
  })();
</script>


<!-- Duoshuo Comment END -->


<p>```</p>

<h4>E 发布到站点</h4>

<p><code>
$ rake generate
$ git add .
$ git commit -am "添加多说评论"
$ git push origin source
$ rake deploy
</code></p>

<h3>起草文章暂不公开</h3>

<p>在文章头部添加<code>published: false</code>，就能起到暂时不公开文章了(即使已经部署到了github中)，要公开文章只需要将false修改<code>true</code>即可。</p>

<h3>域名解析</h3>

<p>我们可以给GitHub上的page指定一个域名，具体做法如下2个步骤</p>

<h4>1、给repo配置域名</h4>

<p>在<code>source</code>根目录下新建一个名为CNAME的文件，并把你的域名填写进去，例如<code>beyondvincent.com</code>。这样做的目的是告诉GitHub服务器开始将repo中的page(例如<code>beyondvincent.github.io</code>)指向到某个域名中。</p>

<h4>2、配置DNS(我的域名是在godaddy上购买的)</h4>

<p>添加一条A记录：
<code>@  204.232.175.78</code>
在CNAME中添加一条记录：
<code>http   beyondvincent.github.com</code></p>

<h3>添加百度统计和google analytics</h3>

<p>从百度统计获取脚本，然后添加到文件<code>source/_includes/after_footer.html</code>文件中
从google analytics获取跟踪ID，然后将这个ID添加到<code>_config.yml</code>文件的<code>google_analytics_tracking_id</code>后面即可。</p>
]]></content>
  </entry>
  
</feed>
